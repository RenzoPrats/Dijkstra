# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dijkstra.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import igraph as gh
from PIL import Image


g = gh.Graph()
g.add_vertices(15)
g.add_edges([(0,1),(0,7),(1,2),(2,3),(3,4),(3,5),(1,4),(4,5),(4,7),(7,6),(4,6),(5,6),
             (6,8),(6,14),(6,12),(8,9),(8,11),(9,10),(10,11),(11,12),(12,13),(13,14)])

g.vs["name"] = ["Itumbiara", "Centralina", "Capinópolis", "Ituiutaba", "Monte Alegre de Minas",
                "Douradinhos", "Uberlândia", "Tupaciguara", "Araguari", "Cascalho Rico", "Grupiara",
                "Estrela do Sul", "Romaria", "São Juliana", "Indianópolis"]

for i in range(len(g.vs)):
    g.vs[i]["id"]= i
    g.vs[i]["label"]= str(i)

weights = [20,55,40,30,85,90,75,28,44,60,60,63,30,45,78,28,34,32,38,27,28,40]
g.es["weight"] = weights
g.es['label'] = weights

cor = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
g.es["is_cor"] = cor

color = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
g.vs["color"] = color

g.vs["label"] = g.vs["name"]
layout = g.layout_auto()

visual_style = {}
visual_style["vertex_size"] = 40
visual_style["vertex_label_size"] = 25
visual_style["vertex_color"] = "green"
visual_style["bbox"] = (900,700)
visual_style["margin"] = 100
visual_style['layout'] = layout



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(850, 467)
        MainWindow.setMinimumSize(QtCore.QSize(850, 467))
        MainWindow.setMaximumSize(QtCore.QSize(850, 467))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.parte_imagem = QtWidgets.QFrame(self.centralwidget)
        self.parte_imagem.setMinimumSize(QtCore.QSize(600, 467))
        self.parte_imagem.setMaximumSize(QtCore.QSize(600, 467))
        self.parte_imagem.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"background-image: url(imagem1 (1).png);")
        self.parte_imagem.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.parte_imagem.setFrameShadow(QtWidgets.QFrame.Raised)
        self.parte_imagem.setObjectName("parte_imagem")
        self.horizontalLayout.addWidget(self.parte_imagem)
        self.parte_cinza = QtWidgets.QFrame(self.centralwidget)
        self.parte_cinza.setMinimumSize(QtCore.QSize(250, 467))
        self.parte_cinza.setMaximumSize(QtCore.QSize(250, 467))
        self.parte_cinza.setStyleSheet("background-color: rgb(124, 124, 124);")
        self.parte_cinza.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.parte_cinza.setFrameShadow(QtWidgets.QFrame.Raised)
        self.parte_cinza.setObjectName("parte_cinza")
        self.label_pp = QtWidgets.QLabel(self.parte_cinza)
        self.label_pp.setGeometry(QtCore.QRect(60, 0, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Sans Serif")
        font.setPointSize(11)
        self.label_pp.setFont(font)
        self.label_pp.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pp.setObjectName("label_pp")
        self.label_pc = QtWidgets.QLabel(self.parte_cinza)
        self.label_pc.setGeometry(QtCore.QRect(60, 70, 141, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_pc.setFont(font)
        self.label_pc.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pc.setObjectName("label_pc")
        self.comboBox_partida = QtWidgets.QComboBox(self.parte_cinza)
        self.comboBox_partida.setGeometry(QtCore.QRect(15, 20, 221, 31))
        self.comboBox_partida.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(0, 179, 255);")
        self.comboBox_partida.setObjectName("comboBox_partida")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_partida.addItem("")
        self.comboBox_chegada = QtWidgets.QComboBox(self.parte_cinza)
        self.comboBox_chegada.setGeometry(QtCore.QRect(15, 90, 221, 31))
        self.comboBox_chegada.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(0, 179, 255);")
        self.comboBox_chegada.setObjectName("comboBox_chegada")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.comboBox_chegada.addItem("")
        self.label_final = QtWidgets.QLabel(self.parte_cinza)
        self.label_final.setGeometry(QtCore.QRect(30, 230, 201, 211))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_final.setFont(font)
        self.label_final.setObjectName("label_final")

        self.pushButton = QtWidgets.QPushButton(self.parte_cinza)
        self.pushButton.setGeometry(QtCore.QRect(15, 160, 221, 41))
        self.pushButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.conexao_cidades)

        self.horizontalLayout.addWidget(self.parte_cinza)

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Algoritmo de Djisktra by: renzo.prats@ufu.br - 11921ECP004"))
        self.label_pp.setText(_translate("MainWindow", "Ponto de Partida"))
        self.label_pc.setText(_translate("MainWindow", "Ponto de Chegada"))
        self.comboBox_partida.setItemText(0, _translate("MainWindow", "Uberlândia"))
        self.comboBox_partida.setItemText(1, _translate("MainWindow", "Centralina"))
        self.comboBox_partida.setItemText(2, _translate("MainWindow", "Capinópolis"))
        self.comboBox_partida.setItemText(3, _translate("MainWindow", "Ituiutaba"))
        self.comboBox_partida.setItemText(4, _translate("MainWindow", "Monte Alegre de Minas"))
        self.comboBox_partida.setItemText(5, _translate("MainWindow", "Tupaciguara"))
        self.comboBox_partida.setItemText(6, _translate("MainWindow", "Douradinhos"))
        self.comboBox_partida.setItemText(7, _translate("MainWindow", "Cascalho Rico"))
        self.comboBox_partida.setItemText(8, _translate("MainWindow", "Grupiara"))
        self.comboBox_partida.setItemText(9, _translate("MainWindow", "Estrela do Sul"))
        self.comboBox_partida.setItemText(10, _translate("MainWindow", "Romaria"))
        self.comboBox_partida.setItemText(11, _translate("MainWindow", "São Juliana"))
        self.comboBox_partida.setItemText(12, _translate("MainWindow", "Indianópolis"))
        self.comboBox_partida.setItemText(13, _translate("MainWindow", "Araguari"))
        self.comboBox_partida.setItemText(14, _translate("MainWindow", "Itumbiara"))
        self.comboBox_chegada.setItemText(0, _translate("MainWindow", "Uberlândia"))
        self.comboBox_chegada.setItemText(1, _translate("MainWindow", "Centralina"))
        self.comboBox_chegada.setItemText(2, _translate("MainWindow", "Capinópolis"))
        self.comboBox_chegada.setItemText(3, _translate("MainWindow", "Ituiutaba"))
        self.comboBox_chegada.setItemText(4, _translate("MainWindow", "Monte Alegre de Minas"))
        self.comboBox_chegada.setItemText(5, _translate("MainWindow", "Tupaciguara"))
        self.comboBox_chegada.setItemText(6, _translate("MainWindow", "Douradinhos"))
        self.comboBox_chegada.setItemText(7, _translate("MainWindow", "Cascalho Rico"))
        self.comboBox_chegada.setItemText(8, _translate("MainWindow", "Grupiara"))
        self.comboBox_chegada.setItemText(9, _translate("MainWindow", "Estrela do Sul"))
        self.comboBox_chegada.setItemText(10, _translate("MainWindow", "Romaria"))
        self.comboBox_chegada.setItemText(11, _translate("MainWindow", "São Juliana"))
        self.comboBox_chegada.setItemText(12, _translate("MainWindow", "Indianópolis"))
        self.comboBox_chegada.setItemText(13, _translate("MainWindow", "Araguari"))
        self.comboBox_chegada.setItemText(14, _translate("MainWindow", "Itumbiara"))
        self.pushButton.setText(_translate("MainWindow", "Encontrar menor rota!"))

    def conexao_cidades(self):
        output1 = self.comboBox_partida.currentText()
        output2 = self.comboBox_chegada.currentText()
        a = output1
        b = output2
        dist = g.shortest_paths_dijkstra(g.vs.select(name_eq=a),g.vs.select(name_eq=b), g.es['weight'])

        sp1 = g.vs.select(name_eq=a)
        sp2 = g.vs.select(name_eq=b)
        id1 = sp1.__getitem__("id")
        id2 = sp2.__getitem__("id")

        for j in id1:
            idd1 = j

        for f in id2:
            idd2 = f

        sp = g.get_shortest_paths(g.vs[idd1],g.vs[idd2], g.es['weight'])

        for d in sp:
            l = g.get_eids(path=d)

        for u in l:
           g.es[u]["is_cor"] = 1

        cidades = ""
        for n in sp:
            for m in n:
                len(n)
                g.vs[m]["color"] = 1
                cidades = cidades + str(g.vs[m]["name"] + " >" + "\n")

        if dist:
            for e in dist:
                for k in e:
                    numero = int(k)
            self.label_final.setText(f'A menor distância entre \n{output1} e \n{output2}:\n\n{cidades} \né {numero}km.')


        color2_dict = {0: "green", 1: "blue"}
        color_dict = {0: "black", 1 : "red"}

        visual_style["edge_width"] = [1 + 4 * int(k) for k in g.es["is_cor"]]
        visual_style["edge_color"] = [color_dict[k] for k in g.es["is_cor"]]
        visual_style["vertex_color"] = [color2_dict[v] for v in g.vs["color"]]

        gh.plot(g,'imagemsub.png',**visual_style)


        image = Image.open('imagemsub.png')
        ni = image.resize((600,467))
        ni.save('newimage.png')
        self.parte_imagem.setStyleSheet("background-color: rgb(255, 255, 255);\n"
                                    "background-image: url(newimage.png);")
        g.es["is_cor"] = cor
        g.vs["color"] = color


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

